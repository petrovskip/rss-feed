import { render, screen } from '@testing-library/react';
import FeedHeader from './components/FeedHeader';
import { searchFn } from './components/Layout';

const mockHeaderData ={
  "title": "dev98",
  "category": {
      "category": "",
      "domain": ""
  },
  "copyright": "",
  "description": "a blog of the netz98 developer team",
  "docs": "",
  "generator": "",
  "language": "en-US",
  "lastBuildDate": "Mon, 14 Sep 2020 08:19:22 +0000",
  "link": "https://dev98.de",
  "managingEditor": "",
  "ttl": "",
  "webMaster": "",
  "image": {
      "height": {
          "text": "32"
      },
      "link": {
          "text": "https://dev98.de"
      },
      "title": {
          "text": "dev98"
      },
      "url": {
          "text": "https://dev98.de/wp-content/uploads/2017/03/cropped-logo_50px.png"
      },
      "width": {
          "text": "32"
      }
  },
  "hasImage": true
}

const mockItemData = [
  {
    "author": "Alexander Dite",
    "category": "",
    "comments": "https://dev98.de/2020/09/14/ajax-loading-of-related-products-in-magento-2/#respond",
    "description": "Introduction In some projects the amount of related products can be significant. In my case there were more than 300 related products and upsell products on some product detail pages. The consequence of this was a high time to first byte on product detail pages. In the mentioned project it was about 15 seconds for some of the products. So we searched for a possible optimization. We finally decided to implement asynchronous loading of product recommendations via AJAX. At the...<p class=\"read-more\"><a class=\"btn btn-default\" href=\"https://dev98.de/2020/09/14/ajax-loading-of-related-products-in-magento-2/\"> Read More<span class=\"screen-reader-text\">  Read More</span></a></p>",
    "guid": "https://dev98.de/?p=1177",
    "link": "https://dev98.de/2020/09/14/ajax-loading-of-related-products-in-magento-2/",
    "pubDate": "Mon, 14 Sep 2020 08:19:22 +0000",
    "title": "AJAX loading of related products in Magento 2",
    "categories": [
      "Magento 2",
      "ajax",
      "catalog",
      "optimization",
      "performance",
      "products",
      "related"
    ],
    "content": "\n<h2>Introduction</h2>\n\n\n\n<p>In some projects the amount of related products can be significant. In my case there were more than 300 related products and upsell products on some product detail pages. The consequence of this was a high time to first byte on product detail pages. In the mentioned project it was about 15 seconds for some of the products. So we searched for a possible optimization. We finally decided to implement asynchronous loading of product recommendations via AJAX. At the end we had a significant performance improvement and better user experience.</p>\n\n\n\n<p>In the following I will describe how to implement the solution on the example of related products on product detail pages. With some modifications this can also be used for upsell products on PDP, or even for crosssells in the Checkout Cart.</p>\n\n\n\n<p>In the following we use a sample extension  called <strong>N98_AjaxProductRecommendations</strong>.</p>\n\n\n\n<h2>The principle of the implementation</h2>\n\n\n\n<p>First what needs to be done is remove the rendering of the related product block on product detail page. After that we replace the removed block with a custom placeholder block with own placeholder template. The template contains a placeholder &lt;div&gt; element and an initialization of a custom JS file. On<em> document ready</em> event an AJAX request is triggered to get the content of related products list and to put the content into the mentioned placeholder &lt;div&gt;. For the AJAX request we need a custom controller class and an abstract layout file. In the placeholder template we also build a check whether the product has related products and only if so, initialize the JS. This avoids unneeded requests for pages where there are no related products linked.</p>\n\n\n\n<h2>Initialize module N98_AjaxProductRecommendations</h2>\n\n\n\n<p><strong>etc/module.xml :</strong></p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"xml\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;?xml version=\"1.0\"?>\n&lt;!--\n/**\n * @copyright Copyright (c) netz98 GmbH (https://www.netz98.de)\n */\n-->\n&lt;config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:Module/etc/module.xsd\">\n    &lt;module name=\"N98_AjaxProductRecommendations\">\n        &lt;sequence>\n            &lt;module name=\"Magento_Catalog\" />\n            &lt;module name=\"Magento_TargetRule\" />\n        &lt;/sequence>\n    &lt;/module>\n&lt;/config>\n</pre>\n\n\n\n<p><strong>composer.json :</strong></p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">{\n    \"name\": \"n98/ext.magento2.n98.ajax-product-recommendations\",\n    \"description\": \"Switch to AJAX loading of product recommendations.\",\n    \"type\": \"magento2-module\",\n    \"license\": [\n        \"proprietary\"\n    ],\n    \"authors\": [\n        {\n            \"name\": \"netz98 GmbH\",\n            \"email\": \"magento@netz98.de\"\n        }\n    ],\n    \"autoload\": {\n        \"files\": [\n            \"registration.php\"\n        ],\n        \"psr-4\": {\n            \"N98\\\\AjaxProductRecommendations\\\\\": \"\"\n        }\n    }\n}\n</pre>\n\n\n\n<p><strong>registration.php :</strong></p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;?php\n/**\n * @copyright Copyright (c) netz98 GmbH (https://www.netz98.de)\n */\n\n\\Magento\\Framework\\Component\\ComponentRegistrar::register(\n    \\Magento\\Framework\\Component\\ComponentRegistrar::MODULE,\n    'N98_AjaxProductRecommendations',\n    __DIR__\n);\n</pre>\n\n\n\n<h2>Route definition and controller</h2>\n\n\n\n<p><strong>etc/frontend/routes.xml :</strong></p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"xml\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:App/etc/routes.xsd\">\n    &lt;router id=\"standard\">\n        &lt;route id=\"n98_ajaxproductrecommendations\" frontName=\"n98_ajaxproductrecommendations\">\n            &lt;module name=\"N98_AjaxProductRecommendations\" />\n        &lt;/route>\n    &lt;/router>\n&lt;/config></pre>\n\n\n\n<p><strong>Controller/Ajax/RenderRelated.php :</strong></p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;?php\n/**\n * @copyright Copyright (c) netz98 GmbH (https://www.netz98.de)\n *\n * @see PROJECT_LICENSE.txt\n */\n\nnamespace N98\\AjaxProductRecommendations\\Controller\\Ajax;\n\nuse Magento\\Catalog\\Api\\ProductRepositoryInterface;\nuse Magento\\Framework\\App\\Action\\Action;\nuse Magento\\Framework\\App\\Action\\Context;\nuse Magento\\Framework\\App\\ResponseInterface;\nuse Magento\\Framework\\Controller\\Result\\Json;\nuse Magento\\Framework\\Controller\\Result\\JsonFactory;\nuse Magento\\Framework\\Registry;\n\n/**\n * Class RenderRelated\n *\n * @package N98\\AjaxProductRecommendations\\Controller\\Ajax\n */\nclass RenderRelated extends Action\n{\n    const BLOCK_NAME_PRODUCT_RELATED_PRODUCTS = 'catalog.product.related';\n    /**\n     * @var JsonFactory\n     */\n    private $jsonFactory;\n    /**\n     * @var ProductRepositoryInterface\n     */\n    private $productRepository;\n    /**\n     * @var Registry\n     */\n    private $coreRegistry;\n\n    /**\n     * Render constructor.\n     * @param Context $context\n     * @param JsonFactory $jsonFactory\n     * @param ProductRepositoryInterface $productRepository\n     * @param Registry $coreRegistry\n     */\n    public function __construct(\n        Context $context,\n        JsonFactory $jsonFactory,\n        ProductRepositoryInterface $productRepository,\n        Registry $coreRegistry\n    ) {\n        parent::__construct($context);\n        $this->jsonFactory = $jsonFactory;\n        $this->productRepository = $productRepository;\n        $this->coreRegistry = $coreRegistry;\n    }\n\n    /**\n     * Execute action based on request and return result\n     *\n     * Note: Request will be added as operation argument in future\n     *\n     * @return \\Magento\\Framework\\Controller\\ResultInterface|ResponseInterface\n     * @throws \\Magento\\Framework\\Exception\\NotFoundException\n     */\n    public function execute()\n    {\n        if (!$this->getRequest()->isAjax()) {\n            $this->_forward('noroute');\n            return;\n        }\n\n        $result = $this->jsonFactory->create();\n\n        $productId = $this->getRequest()->getParam('product_id');\n\n        if (!$productId) {\n            return $this->setErrorResult(\n                $result,\n                __('Product recommendations could not be loaded.')\n            );\n        }\n\n        try {\n            $product = $this->productRepository->getById($productId);\n            /*\n             * set current product in registry for this\n             * 2 keys in order it to be used in rendered blocks\n             */\n            $this->coreRegistry->register('product', $product);\n            $this->coreRegistry->register('current_product', $product);\n\n            $this->_view->loadLayout(\n                ['default', 'n98_ajaxproductrecommendations_content_abstract'],\n                true,\n                true,\n                false\n            );\n            $layout = $this->_view->getLayout();\n            $block = $layout->getBlock(self::BLOCK_NAME_PRODUCT_RELATED_PRODUCTS);\n            if (!$block) {\n                return $this->setErrorResult(\n                    $result,\n                    __('Product recommendations could not be loaded.')\n                );\n            }\n            $output = $block->toHtml();\n            $result->setData(\n                [\n                    'output' => $output,\n                    'success' => true\n                ]\n            );\n            return $result;\n        } catch (\\Exception $e) {\n            return $this->setErrorResult(\n                $result,\n                __('Product recommendations could not be loaded.')\n            );\n        }\n    }\n\n    /**\n     * Set error result\n     *\n     * @param Json $result\n     * @param string $errorMessage\n     * @return Json\n     */\n    private function setErrorResult(Json $result, $errorMessage)\n    {\n        $result->setData(\n            [\n                'output' => $errorMessage,\n                'success' => false\n            ]\n        );\n\n        return $result;\n    }\n}\n</pre>\n\n\n\n<h2>Frontend Block, Layouts, Template, ViewModel and JS file</h2>\n\n\n\n<p><strong>Block/Placeholder/Related.php :</strong></p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;?php\n/**\n * @copyright Copyright (c) netz98 GmbH (https://www.netz98.de)\n *\n * @see PROJECT_LICENSE.txt\n */\n\nnamespace N98\\AjaxProductRecommendations\\Block\\Placeholder;\n\nuse Magento\\Catalog\\Block\\Product\\View as CatalogProductView;\n\n/**\n * Class Related\n *\n * @package N98\\AjaxProductRecommendations\\Block\\Placeholder\n */\nclass Related extends CatalogProductView\n{\n    /**\n     * @return string\n     */\n    public function getAjaxUrl()\n    {\n        // return relative url, base urls will be prefixed in js\n        return 'n98_ajaxproductrecommendations/ajax/renderRelated';\n    }\n}\n</pre>\n\n\n\n<p><strong>view/frontend/layout/catalog_product_view.xml :</strong></p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"xml\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;?xml version=\"1.0\"?>\n&lt;!--\n/**\n * @copyright Copyright (c) netz98 GmbH (https://www.netz98.de)\n *\n * @see PROJECT_LICENSE.txt\n */\n-->\n&lt;page layout=\"1column\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n    &lt;body>\n        &lt;referenceContainer name=\"content.aside\">\n            &lt;block class=\"N98\\AjaxProductRecommendations\\Block\\Placeholder\\Related\"\n                   name=\"catalog.product.related.placeholder\" as=\"related-products-placeholder\"\n                   template=\"N98_AjaxProductRecommendations::placeholder/related.phtml\"\n                   before=\"product.info.upsell\">\n                &lt;arguments>\n                    &lt;argument name=\"view_model\" xsi:type=\"object\">N98\\AjaxProductRecommendations\\ViewModel\\RelatedViewModel&lt;/argument>\n                &lt;/arguments>\n            &lt;/block>\n        &lt;/referenceContainer>\n        &lt;!-- Remove related blocks as they are now loaded via AJAX -->\n        &lt;referenceBlock name=\"related_products_impression\" remove=\"true\"/>\n        &lt;referenceBlock name=\"catalog.product.related\" remove=\"true\"/>\n    &lt;/body>\n&lt;/page>\n</pre>\n\n\n\n<p><strong>view/frontend/layout/n98_ajaxproductrecommendations_content_abstract.xml :</strong></p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"xml\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;?xml version=\"1.0\"?>\n&lt;!--\n/**\n * @copyright Copyright (c) netz98 GmbH (https://www.netz98.de)\n *\n * @see PROJECT_LICENSE.txt\n */\n-->\n&lt;layout xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/layout_generic.xsd\">\n    &lt;block class=\"Magento\\TargetRule\\Block\\Catalog\\Product\\ProductList\\Related\" name=\"catalog.product.related\" template=\"Magento_Catalog::product/list/items.phtml\">\n        &lt;arguments>\n            &lt;argument name=\"type\" xsi:type=\"string\">related-rule&lt;/argument>\n            &lt;argument name=\"view_model\" xsi:type=\"object\">Magento\\Catalog\\ViewModel\\Product\\Listing\\PreparePostData&lt;/argument>\n        &lt;/arguments>\n        &lt;block class=\"Magento\\Catalog\\Block\\Product\\ProductList\\Item\\Container\" name=\"related.product.addto\" as=\"addto\">\n            &lt;block class=\"Magento\\Wishlist\\Block\\Catalog\\Product\\ProductList\\Item\\AddTo\\Wishlist\"\n                   name=\"related.product.addto.wishlist\" as=\"wishlist\" before=\"compare\"\n                   template=\"Magento_Wishlist::catalog/product/list/addto/wishlist.phtml\"/>\n            &lt;block class=\"Magento\\Catalog\\Block\\Product\\ProductList\\Item\\AddTo\\Compare\"\n                   name=\"related.product.addto.compare\" as=\"compare\"\n                   template=\"Magento_Catalog::product/list/addto/compare.phtml\"/>\n        &lt;/block>\n    &lt;/block>\n&lt;/layout>\n</pre>\n\n\n\n<p><strong>view/frontend/templates/placeholder/related.phtml :</strong></p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;?php\n/**\n * @copyright Copyright (c) netz98 GmbH (https://www.netz98.de)\n *\n * @see       PROJECT_LICENSE.txt\n */\n/** @var $block \\N98\\AjaxProductRecommendations\\Block\\Placeholder\\Related */\n/** @var \\N98\\AjaxProductRecommendations\\ViewModel\\RelatedViewModel $viewModel */\n$viewModel = $block->getData('view_model');\n$product = $block->getProduct();\n?>\n&lt;?php if ($viewModel->productHasRelatedProducts($product)): ?>\n    &lt;?php\n    $htmlPlaceholderId = 'product-recommendation-detailpage-related-placeholder';\n    ?>\n    &lt;div id=\"&lt;?php echo $htmlPlaceholderId; ?>\">&lt;/div>\n    &lt;?php\n    $ajaxUrl = $block->getAjaxUrl();\n    $loaderImage = $block->escapeUrl($block->getViewFileUrl('images/loader-1.gif'));\n    ?>\n    &lt;script type=\"text/x-magento-init\">\n    {\n        \"*\": {\n            \"N98_AjaxProductRecommendations/js/related-products-loader\": {\n                \"ajaxUrl\": \"&lt;?php echo $ajaxUrl; ?>\",\n                \"productId\": \"&lt;?php echo $product->getId(); ?>\",\n                \"htmlPlaceholderId\": \"&lt;?php echo $htmlPlaceholderId; ?>\",\n                \"loaderImage\": \"&lt;?php echo $loaderImage; ?>\"\n            }\n        }\n    }\n\n    &lt;/script>\n&lt;?php endif; ?>\n</pre>\n\n\n\n<p><strong>view/frontend/web/js/related-products-loader.js :</strong></p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">define([\n    \"jquery\",\n    \"loader\"\n], function ($) {\n    \"use strict\";\n\n    function renderRelatedProducts(config) {\n        var ajaxUrl = BASE_URL + config.ajaxUrl;\n        var productId = config.productId;\n        var elementId = config.htmlPlaceholderId;\n        var loaderImageUrl = config.loaderImage;\n\n        $(document).ready(function () {\n            $.ajax({\n                context: '#' + elementId,\n                url: ajaxUrl,\n                type: 'POST',\n                data: {product_id: productId},\n                dataType: 'json',\n                beforeSend: function() {\n                    $('#' + elementId).loader({icon: loaderImageUrl});\n                    $('#' + elementId).trigger('processStart');\n                },\n                success: function(data) {\n                    var element = $('#' + elementId);\n                    if (data.success === true) {\n                        element.html(data.output).trigger('contentUpdated');\n                        $('form[data-role=\"tocart-form\"]').catalogAddToCart();\n                    } else {\n                        element.html('&lt;p>&lt;strong>' + data.output + '&lt;/strong>&lt;/p>'); // display error message\n                    }\n                    return data.success;\n                },\n                complete: function() {\n                    $('#' + elementId).trigger('processStop');\n                },\n                error: function() {\n                    $('#' + elementId).trigger('processStop');\n                }\n            });\n        });\n    }\n\n    return renderRelatedProducts;\n});\n</pre>\n\n\n\n<p><strong>ViewModel/RelatedViewModel.php :</strong></p>\n\n\n\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\" data-enlighter-theme=\"\" data-enlighter-highlight=\"\" data-enlighter-linenumbers=\"\" data-enlighter-lineoffset=\"\" data-enlighter-title=\"\" data-enlighter-group=\"\">&lt;?php\n/**\n * @copyright Copyright (c) netz98 GmbH (https://www.netz98.de)\n *\n * @see       PROJECT_LICENSE.txt\n */\n\nnamespace N98\\AjaxProductRecommendations\\ViewModel;\n\nuse Magento\\Catalog\\Api\\Data\\ProductInterface;\nuse Magento\\Catalog\\Model\\Product;\nuse Magento\\Framework\\View\\Element\\Block\\ArgumentInterface;\n\n/**\n * Class RelatedViewModel\n *\n * @package N98\\AjaxProductRecommendations\\ViewModel\n */\nclass RelatedViewModel implements ArgumentInterface\n{\n    /**\n     * Product has related products check\n     *\n     * @param ProductInterface $product\n     *\n     * @return bool\n     */\n    public function productHasRelatedProducts(ProductInterface $product)\n    {\n        /** @var Product $product */\n        $relatedCollection = $product->getRelatedLinkCollection();\n\n        // use getSize() methods in order not to load collection but just trigger count sql\n        if ($relatedCollection->getSize() > 0) {\n            return true;\n        }\n\n        return false;\n    }\n}\n</pre>\n\n\n\n<h2>Summing up</h2>\n\n\n\n<p>The presented code was tested with Magento Commerce 2.3.5 and simple products only.  The examples in this article do not claim to be complete. Feel free to leave a comment if you have a question or suggestion for improvements.</p>\n"
  },
  {
    "author": "Elias Henrich",
    "category": "",
    "comments": "https://dev98.de/2019/06/19/request-data-through-a-proxy-with-guzzlehttp-psr-7-compliant/#respond",
    "description": "When a Magento shop &#8211; or any other PHP application &#8211; is required to request data from or transmit data to a remote server, it is often necessary to redirect the traffic through a Http-proxy server. In my case this was essential because the called endpoint allows only certain IP addresses to access the requested ressource. Since I am working from various locations, each having a different IP address, I had to find a way that certain Http-requests are routed...<p class=\"read-more\"><a class=\"btn btn-default\" href=\"https://dev98.de/2019/06/19/request-data-through-a-proxy-with-guzzlehttp-psr-7-compliant/\"> Read More<span class=\"screen-reader-text\">  Read More</span></a></p>",
    "guid": "https://dev98.de/?p=1104",
    "link": "https://dev98.de/2019/06/19/request-data-through-a-proxy-with-guzzlehttp-psr-7-compliant/",
    "pubDate": "Wed, 19 Jun 2019 09:26:09 +0000",
    "title": "Request data through a proxy with GuzzleHttp – PSR-7 compliant",
    "categories": [
      "General",
      "GuzzleHttp",
      "HTTP",
      "magento2",
      "proxy",
      "PSR",
      "PSR-7"
    ],
    "content": "\n<p>When a Magento shop &#8211; or any other PHP application &#8211; is required to request data from or transmit data to a remote server, it is often necessary to redirect the traffic through a Http-proxy server. In my case this was essential because the called endpoint allows only certain IP addresses to access the requested ressource. Since I am working from various locations, each having a different IP address, I had to find a way that certain Http-requests are routed through the company&#8217;s proxy server. This article is going to describe what a proxy actually does for us, why I cannot and should not use PHP&#8217;s environment variables and what the best solution is for scenarios where PSR-7 / <a href=\"http://docs.php-http.org/en/latest/\">PHP-Http</a> in combination with <a href=\"http://docs.guzzlephp.org/en/stable/\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">GuzzleHttp</a> might be.</p>\n\n\n\n<h3>What about <a href=\"https://www.php-fig.org/psr/psr-15/\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">PSR-15</a>?</h3>\n\n\n\n<p>Good point! This text will discuss Http middleware components on client side with the example of adding proxy configurations to a request. The relatively new PSR-15 standard handles the server side and focuses mainly on manipulating the response which is sent back to the calling host. Nevertheless you will get a lot of useful information from the <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://www.php-fig.org/psr/psr-15/\" target=\"_blank\">standard</a> and the <a href=\"https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-15-request-handlers-meta.md#why-doesnt-request-handler-use-__invoke\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">explanation</a>. </p>\n\n\n\n<h3>Why don&#8217;t you simply use the the HTTP_PROXY environment variable?</h3>\n\n\n\n<p>Guzzle indeed accesses the PHP environment variable HTTP_PROXY and routes every request through the specified proxy, if this value is actually configured in php.ini or by using the <code>setenv()</code>-command. <em>But</em> for security reasons this feature is only available when the script is called from the shell (checked using method <a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://php.net/manual/en/function.php-sapi-name.php\" target=\"_blank\">php_sapi_name()</a>). More information on the vulnerability and the reason why GuzzleHttp declines to use the settings from environment variables can be found at <a href=\"https://httpoxy.org/\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">httpoxy.org</a>. </p>\n\n\n\n<h3>GuzzleHttp offers a proxy-configuration within the request()-method &#8211; why not use this?</h3>\n\n\n\n<p>Because it it not PSR-7 compliant! The HTTP message interface simply does not provide a method with name <code>request</code> that allows the developer to pass an options-array in which we could add our proxy-configuration. Instead the <a href=\"https://github.com/php-http/httplug/blob/v1.1.0/src/HttpClient.php\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">interface</a> does only declare a method <code>sendRequest</code> that accepts an object of type <code>\\Psr\\Http\\Message\\RequestInterface</code> which also does not offer any proxy configuration. </p>\n\n\n\n<h2>Middleware and Handlers</h2>\n\n\n\n<p>Middleware components are a powerful &#8211; and PSR-7 compliant &#8211; way to manipulate Http requests before they&#8217;re sent to a remote server. </p>\n\n\n\n<p>In an example scenario where it would be required to send authentication data in each server call, it&#8217;d sure be exhausting to update the credentials for each method call all over your application&#8217;s code. Adding a middleware layer that automatically adds the necessary data to each request, before it is transmitted, will reduce the code lines to be updated to just a single one (maybe two).</p>\n\n\n\n<p>A middleware is simply a method that resides between the command for sending a request and the actual transmittion. It allows to add, remove or modify data, the target-URL or any other property of the <code>\\Psr\\Http\\Message\\RequestInterface</code> as well as additional configuration, that is important for data transfer. </p>\n\n\n\n<p>More information on the PSR-7 standard is given in our <a href=\"https://dev98.de/2017/01/17/psr-7-standard-part1-overview/\">in-depth series</a>.</p>\n\n\n\n<h3>Create a middleware and add it to the HandlerStack</h3>\n\n\n\n<p>The diagram below sketches on the top half the classical way of sending a request: The developer adds a a <code>sendRequest</code> command along with the connection and data settings hold by  <code>$request</code> and passes it to a various transmittion mechanism, e.g. GuzzleHttp.</p>\n\n\n\n<figure class=\"wp-block-image\"><img data-attachment-id=\"1105\" data-permalink=\"https://dev98.de/2019/06/19/request-data-through-a-proxy-with-guzzlehttp-psr-7-compliant/middleware/\" data-orig-file=\"https://dev98.de/wp-content/uploads/2019/06/Middleware.png\" data-orig-size=\"721,239\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"Middleware\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://dev98.de/wp-content/uploads/2019/06/Middleware-300x99.png\" data-large-file=\"https://dev98.de/wp-content/uploads/2019/06/Middleware.png\" width=\"721\" height=\"239\" src=\"https://dev98.de/wp-content/uploads/2019/06/Middleware.png\" alt=\"\" class=\"wp-image-1105\" srcset=\"https://dev98.de/wp-content/uploads/2019/06/Middleware.png 721w, https://dev98.de/wp-content/uploads/2019/06/Middleware-300x99.png 300w, https://dev98.de/wp-content/uploads/2019/06/Middleware-604x200.png 604w\" sizes=\"(max-width: 721px) 100vw, 721px\" /></figure>\n\n\n\n<p>In the bottom half of the diagram two sample middleware methods <code>m1</code> and <code>m2</code> are added to stack that resides between sending the request and the actual transmittion. Both methods are free to modify the request or the configuration hold by <code>$options</code> and are executed one after another, as described by the <em>chain of responsibility</em>, part of the infamous <a href=\"https://en.wikipedia.org/wiki/Design_Patterns\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">Gang of Four</a>.</p>\n\n\n\n<p>The following implementation has proven to be stable but might be a bit more complex than what is actually necessary to create a middleware method. The reason for that is because of a better test-ability and more flexibility for future add-ons. </p>\n\n\n\n<h3>Class ProxyMiddleware</h3>\n\n\n\n<p>First step is to create a new class called <code>ProxyMiddleware</code> that is responsible to prepare the concrete middleware method for the handler stack, managed by GuzzleHttp. This class has static method, which holds the proxy settings (URL and port) and will return a closure that will be pushed onto the handler stack later.</p>\n\n\n\n<pre class=\"wp-block-preformatted\">public static function getProxyMiddleware($serverUrl): callable\n{\n &nbsp; &nbsp;self::$proxyUrl = $serverUrl;\n​\n &nbsp; &nbsp;return function (callable $handler) {\n &nbsp; &nbsp; &nbsp; &nbsp;return new ProxyMiddleware($handler);\n &nbsp;  };\n}</pre>\n\n\n\n<p>As soon as the closure is called during data transmittion a new instance of the <code>ProxyMiddleware</code>-class is created and invoked by the stack dispatcher. Therefore we need to implement the actual middleware-call inside of the magic <code>__invoke</code>-method:</p>\n\n\n\n<pre class=\"wp-block-preformatted\">public function __invoke(RequestInterface $request, array $options)<br>{<br> &nbsp; &nbsp;$fn = $this-&gt;nextHandler;<br>​<br> &nbsp; &nbsp;$options['proxy'] = [<br> &nbsp; &nbsp; &nbsp; &nbsp;'http' &nbsp;=&gt; self::$proxyUrl,<br> &nbsp; &nbsp; &nbsp; &nbsp;'https' =&gt; self::$proxyUrl,<br> &nbsp;  ];<br>​<br> &nbsp; &nbsp;return $fn($request, $options);<br>}</pre>\n\n\n\n<p>It&#8217;s that simple! We just add the proxy information to the <code>$options</code>-array and pass the new information onto the method described by <code>$nextHandler</code>. That was easy!</p>\n\n\n\n<h3>Add our middleware to the handler stack</h3>\n\n\n\n<p>After we have created the middleware handler, we need to tell GuzzleHttp to actually execute it after the <code>sendRequest</code>-command is executed. For this second step we need to instantiate a new <code>HandlerStack</code>-object using the class&#8217; static <code>create</code>-method.</p>\n\n\n\n<pre class=\"wp-block-preformatted\">$handlerStack = \\GuzzleHttp\\HandlerStack::create();<br>$handlerStack-&gt;push(ProxyMiddleware::getProxyMiddleware('proxy_url'), 'middleware_id');<br>​<br>$options['handler'] = $handlerStack;<br>​<br>$httpClient = \\Http\\Adapter\\Guzzle6\\Client::createWithConfig($options);</pre>\n\n\n\n<p>Now we simply push the previously described closure onto the stack together with an identifier-string. Allthough this ID is optional, it will be more than helpful for debugging your application, since Guzzle adds a couple of default middlewares to the stack and you would end up in a unmanageable mess. </p>\n\n\n\n<p>After we have created and configured the handler stack, we simply use the static <code>createWithConfig</code>-method that allows us to inject a options-array into the instantiation of a new Guzzle PSR-7 compliant Http client. </p>\n\n\n\n<p>From now on, all requests that are sent using this Http client will be transmitted with your middleware executed inbetween and having the proxy setting configured!</p>\n\n\n\n<h2>Caveat: Unit Testing</h2>\n\n\n\n<p>Testing your new middleware-class might be a little bit tricky. I just want you to know that closures, like the class member <code>$nextHandler</code> can be mocked using PHP&#8217;s pre-defined core class  <a href=\"https://www.php.net/manual/de/reserved.classes.php\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">\\stdClass</a> and the magic <code>__invoke</code> method. In case you&#8217;re using PHPUnit, the following snippet might be helpful:</p>\n\n\n\n<pre class=\"wp-block-preformatted\">$nextHandlerMock = $this-&gt;createPartialMock(\\stdClass::class, ['__invoke']);</pre>\n\n\n\n<h2>More information</h2>\n\n\n\n<ul><li><a href=\"https://dev98.de/2017/01/17/psr-7-standard-part1-overview/\">https://dev98.de/2017/01/17/psr-7-standard-part1-overview/</a></li><li><a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"http://docs.guzzlephp.org/en/stable/handlers-and-middleware.html\" target=\"_blank\">http://docs.guzzlephp.org/en/stable/handlers-and-middleware.html</a></li><li><a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"http://docs.guzzlephp.org/en/stable/request-options.html#proxy\" target=\"_blank\">http://docs.guzzlephp.org/en/stable/request-options.html#proxy</a></li><li><a rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\" href=\"https://medium.com/@brad_brothers/build-a-better-api-client-with-guzzle-middleware-2ace56868dc7\" target=\"_blank\">https://medium.com/@brad_brothers/build-a-better-api-client-with-guzzle-middleware-2ace56868dc7</a></li><li><a href=\"https://github.com/darrenmothersele/php-psr7-proxy\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\" (opens in a new tab)\">https://github.com/darrenmothersele/php-psr7-proxy</a></li></ul>\n"
  },
  {
    "author": "Christian Münch",
    "category": "General",
    "comments": "https://dev98.de/2019/04/10/a-visit-at-our-friends-of-atwix-in-lviv-ukraine/#respond",
    "description": "Last month we received an invitation by our friends of Atwix to attend their Barcamp in Lviv/Ukraine. My colleague Oleksandr and me were happy to join it. Oleksandr was the perfect mate, because he was grown up in Ukraine and so he knows everything about the traditions and local specialities. Our journey started in Frankfurt. After a stopover in Munich we arrived on site with enough energy to explore the beautiful city of Lviv. Oleksandr introduced me to the local...<p class=\"read-more\"><a class=\"btn btn-default\" href=\"https://dev98.de/2019/04/10/a-visit-at-our-friends-of-atwix-in-lviv-ukraine/\"> Read More<span class=\"screen-reader-text\">  Read More</span></a></p>",
    "guid": "https://dev98.de/?p=1061",
    "link": "https://dev98.de/2019/04/10/a-visit-at-our-friends-of-atwix-in-lviv-ukraine/",
    "pubDate": "Wed, 10 Apr 2019 15:38:03 +0000",
    "title": "A visit at our friends of Atwix in Lviv/Ukraine",
    "content": "\n<p>Last month we received an invitation by our friends of Atwix to attend their Barcamp in Lviv/Ukraine. My colleague Oleksandr and me were happy to join it. Oleksandr was the perfect mate, because he was grown up in Ukraine and so he knows everything about the traditions and local specialities.</p>\n\n\n\n<p>Our journey started in Frankfurt. After a stopover in Munich we arrived on site with enough energy to explore the beautiful city of Lviv. <br>Oleksandr introduced me to the local delicacies like Borsch (Борщ), Blini (млинці) with Cherry and Varenyky (вареники).</p>\n\n\n\n<figure class=\"wp-block-image\"><img data-attachment-id=\"1062\" data-permalink=\"https://dev98.de/2019/04/10/a-visit-at-our-friends-of-atwix-in-lviv-ukraine/img_20190314_153444/\" data-orig-file=\"https://dev98.de/wp-content/uploads/2019/04/IMG_20190314_153444.jpg\" data-orig-size=\"1707,1280\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"IMG_20190314_153444\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://dev98.de/wp-content/uploads/2019/04/IMG_20190314_153444-300x225.jpg\" data-large-file=\"https://dev98.de/wp-content/uploads/2019/04/IMG_20190314_153444-1024x768.jpg\" loading=\"lazy\" width=\"1707\" height=\"1280\" src=\"https://i2.wp.com/dev98.de/wp-content/uploads/2019/04/IMG_20190314_153444.jpg?fit=640%2C480&amp;ssl=1\" alt=\"\" class=\"wp-image-1062\" srcset=\"https://dev98.de/wp-content/uploads/2019/04/IMG_20190314_153444.jpg 1707w, https://dev98.de/wp-content/uploads/2019/04/IMG_20190314_153444-300x225.jpg 300w, https://dev98.de/wp-content/uploads/2019/04/IMG_20190314_153444-1024x768.jpg 1024w, https://dev98.de/wp-content/uploads/2019/04/IMG_20190314_153444-768x576.jpg 768w, https://dev98.de/wp-content/uploads/2019/04/IMG_20190314_153444-1536x1152.jpg 1536w, https://dev98.de/wp-content/uploads/2019/04/IMG_20190314_153444-360x270.jpg 360w\" sizes=\"(max-width: 1707px) 100vw, 1707px\" /><figcaption>Traditional Ukraine Food<br></figcaption></figure>\n\n\n\n<p>After an delicious meal we met among others Slava Kravchuk (CEO of Atwix), Yaroslav, Maria Zayak, Tomislav Bilić (CEO of Inchoo) and Max Yekaterynenko (Director of Community Engineering at Adobe). </p>\n\n\n\n<h2>Barcamp</h2>\n\n\n\n<p>The Barcamp started with a breakfast where the attendees already had the chance to get to know each other.</p>\n\n\n\n<p>The agenda of the Barcamp was created in different way compared to previous Barcamps I attended. There were two parallel tracks with already defined talks and discussions. I had the honor to have a talk about Gitlab CI Build Pipelines. </p>\n\n\n\n<figure class=\"wp-block-image\"><img data-attachment-id=\"1065\" data-permalink=\"https://dev98.de/2019/04/10/a-visit-at-our-friends-of-atwix-in-lviv-ukraine/atwix-barcamp-agenda/\" data-orig-file=\"https://dev98.de/wp-content/uploads/2019/04/Atwix-Barcamp-Agenda.png\" data-orig-size=\"800,450\" data-comments-opened=\"1\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"Atwix-Barcamp-Agenda\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://dev98.de/wp-content/uploads/2019/04/Atwix-Barcamp-Agenda-300x169.png\" data-large-file=\"https://dev98.de/wp-content/uploads/2019/04/Atwix-Barcamp-Agenda.png\" loading=\"lazy\" width=\"800\" height=\"450\" src=\"https://dev98.de/wp-content/uploads/2019/04/Atwix-Barcamp-Agenda.png\" alt=\"\" class=\"wp-image-1065\" srcset=\"https://dev98.de/wp-content/uploads/2019/04/Atwix-Barcamp-Agenda.png 800w, https://dev98.de/wp-content/uploads/2019/04/Atwix-Barcamp-Agenda-300x169.png 300w, https://dev98.de/wp-content/uploads/2019/04/Atwix-Barcamp-Agenda-768x432.png 768w, https://dev98.de/wp-content/uploads/2019/04/Atwix-Barcamp-Agenda-480x270.png 480w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><figcaption>Agenda</figcaption></figure>\n\n\n\n<p>As you can see, there were a lot of interesting talks about all the hot Magento stuff like PWA. Also non Magento related topics like Remote Working were part of the agenda.</p>\n\n\n\n<figure class=\"wp-block-embed-twitter wp-block-embed is-type-rich is-provider-twitter\"><div class=\"wp-block-embed__wrapper\">\n<blockquote class=\"twitter-tweet\" data-width=\"550\" data-dnt=\"true\"><p lang=\"en\" dir=\"ltr\">The legendary <a href=\"https://twitter.com/cmuench?ref_src=twsrc%5Etfw\">@cmuench</a> from <a href=\"https://twitter.com/netz98?ref_src=twsrc%5Etfw\">@netz98</a> is explaining the intelligent pipelines and <a href=\"https://twitter.com/hashtag/Magento?src=hash&amp;ref_src=twsrc%5Etfw\">#Magento</a> deployment process at the <a href=\"https://twitter.com/atwixcom?ref_src=twsrc%5Etfw\">@atwixcom</a> barcamp <a href=\"https://twitter.com/hashtag/atwixbarcamp?src=hash&amp;ref_src=twsrc%5Etfw\">#atwixbarcamp</a> <a href=\"https://t.co/Ha5lVsX0EF\">pic.twitter.com/Ha5lVsX0EF</a></p>&mdash; Slava Kravchuk (@slkra) <a href=\"https://twitter.com/slkra/status/1106496003459465222?ref_src=twsrc%5Etfw\">March 15, 2019</a></blockquote><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</div></figure>\n\n\n\n<p>After a long day with a lot of good content and discussions the day ended with a party at a very cool <a href=\"https://www.fest.lviv.ua/uk/restaurants/kryjivka/\">location</a> where we tasted local food and drinks together with the Atwix and Inchoo guys.</p>\n\n\n\n<h2>Magento Contribution Day</h2>\n\n\n\n<p>Atwix as No. 1 Contributor had organized a Magento Contribution Day. A Contribution Day is a good chance to dive into the source code of the Magento Core.</p>\n\n\n\n<p>The procedure is very easy. Pick some topics from Magento Contribution backlog and try to fix, solve or invent stuff. If you do not know what you can do, visit the portal to start your way to contribute.</p>\n\n\n\n<p><a href=\"https://opensource.magento.com/\">https://opensource.magento.com/</a></p>\n\n\n\n<p>It is also possible to contribute to non code related topics like the developer documentation. I personally picked up an old bug ticket which was not edited since 2016.</p>\n\n\n\n<h2>Conclusion</h2>\n\n\n\n<p>We had a lot of good discussions with <a href=\"https://www.atwix.com/\">Atwix</a> and <a href=\"https://inchoo.net/\">Inchoo</a> developers and project managers about PWA, Magento, Certification and a lot of more topics. I was able to share some insights about Gitlab-CI pipelines which shows the netz98 way of building projects.<br>The evening event was great. The Contribution Day, too&#8230;</p>\n\n\n\n<p>Thank you for the hospitality. See you next time in Lviv.</p>\n\n\n\n<figure class=\"wp-block-embed-twitter wp-block-embed is-type-rich is-provider-twitter\"><div class=\"wp-block-embed__wrapper\">\n<blockquote class=\"twitter-tweet\" data-width=\"550\" data-dnt=\"true\"><p lang=\"en\" dir=\"ltr\">Thanks so much for the great <a href=\"https://twitter.com/hashtag/atwixbarcamp?src=hash&amp;ref_src=twsrc%5Etfw\">#atwixbarcamp</a> everyone! <a href=\"https://t.co/pWhZSqrNoY\">pic.twitter.com/pWhZSqrNoY</a></p>&mdash; Atwix (@atwixcom) <a href=\"https://twitter.com/atwixcom/status/1106600934950555648?ref_src=twsrc%5Etfw\">March 15, 2019</a></blockquote><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</div></figure>\n"
  },
  {
    "author": "Alexander Dite",
    "category": "",
    "comments": "https://dev98.de/2018/07/23/how-a-wrong-carrier-implementation-causes-a-server-outage/#comments",
    "description": "Sometimes one wrong line of code can break your site. In the following I will describe a mistake in a Magento 2 custom carrier implementation, which causes a massive overloading of server resources (CPU, RAM, DB processes) and even can cause an outage of your Magento store. The one line of code The following line of code is the reason for the problems, if used in the collectRates() method, or in methods, called from collectRates() in the Carrier class: $quote...<p class=\"read-more\"><a class=\"btn btn-default\" href=\"https://dev98.de/2018/07/23/how-a-wrong-carrier-implementation-causes-a-server-outage/\"> Read More<span class=\"screen-reader-text\">  Read More</span></a></p>",
    "guid": "https://dev98.de/?p=998",
    "link": "https://dev98.de/2018/07/23/how-a-wrong-carrier-implementation-causes-a-server-outage/",
    "pubDate": "Mon, 23 Jul 2018 08:00:26 +0000",
    "title": "How a wrong carrier implementation causes a server outage",
    "categories": [
      "Magento 2",
      "performance"
    ],
    "content": "<p>Sometimes one wrong line of code can break your site. In the following I will describe a mistake in a Magento 2 custom carrier implementation, which causes a massive overloading of server resources (CPU, RAM, DB processes) and even can cause an outage of your Magento store.</p>\n<h3>The one line of code</h3>\n<p>The following line of code is the reason for the problems, if used in the collectRates() method, or in methods, called from collectRates() in the Carrier class:</p>\n<pre class=\"lang:php decode:true\">$quote = $this-&gt;checkoutSession-&gt;getQuote();\r\n</pre>\n<p>So, in other words, you must not obtain the quote object globally via the checkout session.</p>\n<h3>The reason</h3>\n<p>The method <em>\\Magento\\Checkout\\Model\\Session::getQuote(), </em>called for the first time, triggers loading the quote. If we then look at the method <em>\\Magento\\Quote\\Model\\Quote::_afterLoad()</em> :</p>\n<pre class=\"lang:php decode:true \">    /**\r\n     * Trigger collect totals after loading, if required\r\n     *\r\n     * @return $this\r\n     */\r\n    protected function _afterLoad()\r\n    {\r\n        // collect totals and save me, if required\r\n        if (1 == $this-&gt;getTriggerRecollect()) {\r\n            $this-&gt;collectTotals()-&gt;save();\r\n            $this-&gt;setTriggerRecollect(0);\r\n        }\r\n        return parent::_afterLoad();\r\n    }</pre>\n<p>We then can see, that for quotes, having the field (also a DB column) <em>trigger_recollect</em> set to 1, <em>collectTotals()</em> method is called.</p>\n<p>An attentive reader will already notice, what is going wrong here. It&#8217;s an infinite loop! <em>Quote::collectTotals()</em> will trigger shipping carriers&#8217; method <em>collectRates() </em>and thats where the loop is closed.</p>\n<p>The <em>trigger_recollect</em> flag is set in Magento:</p>\n<ul>\n<li>for quotes depending on catalog price rules</li>\n<li>for quotes containing products which were updated (e.g. in Admin or via API)</li>\n</ul>\n<p>In my case there were a lot of such kind of quotes because of frequent product updates.</p>\n<p>The result was overloaded CPUs, RAM, full MySQL process list and several outages as the infinite loops were being executed for the value of seconds equals PHP max_execution_time.</p>\n<h3>How to avoid this</h3>\n<p>The shipping carrier&#8217;s method collectRates() gets the object of the class <em>\\Magento\\Quote\\Model\\Quote\\Address\\RateRequest </em>passed, where the already loaded quote object should be obtained from (if needed). Unfortunately there is no method &#8220;getQuote()&#8221; in the RateRequest class. The following snippet shows an example of obtaining the quote correctly:</p>\n<pre class=\"lang:php decode:true\">        /**\r\n         * Do not use checkoutSession-&gt;getQuote()!!! it will cause infinite loop for\r\n         * quotes with trigger_recollect = 1, see Quote::_afterLoad()\r\n         */\r\n        $items = $request-&gt;getAllItems();\r\n        if (empty($items)) {\r\n            return false;\r\n        }\r\n\r\n        /** @var \\Magento\\Quote\\Model\\Quote\\Item $firstItem */\r\n        $firstItem = reset($items);\r\n        if (!$firstItem) {\r\n            return false;\r\n        }\r\n\r\n        $quote = $firstItem-&gt;getQuote();\r\n        if (!($quote instanceof \\Magento\\Quote\\Model\\Quote)) {\r\n            return false;\r\n        }</pre>\n<p>I hope this post can save some nerves for you and your team. Feel free to leave a comment.</p>\n"
  }
];

test('renders header link', () => {
  // @ts-ignore:next-line
  render(<FeedHeader {...mockHeaderData} />);
  const linkElement = screen.getByText(/dev98/i);
  expect(linkElement).toBeInTheDocument();
});

test('renders img in header link', () => {
  // @ts-ignore:next-line
  render(<FeedHeader {...mockHeaderData} />);
  const imgElement = screen.getByAltText(/dev98/i);
  expect(imgElement).toBeInTheDocument();
});

describe('Search', () => {
  it('filters', () => {

    const searchInput = "AJAX";

    const filteredItems = searchFn(mockItemData, searchInput);

    expect(filteredItems).toHaveLength(1);
  })
})

